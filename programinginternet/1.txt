Статические страницы
Веб-броузер - это программа, которая отправляет запросы в интернет.
Веб-сервер считывает запросы и отправляет ответы.
Достоинства HTML - простота, недостаток - статичность. Возникла необходимость создать специальный набор подпрограмм, которые работают совместно с веб-сервером, осуществляют перехват получаемых веб-сервером запросов и активизируется при выдачи информации в интернет. Важной функцией является извлечение из запросов ключевых слов для сортировки, группировки и фильтрации.
Существуют два метода при передачи информации через интернет:
1. GET.
2. POST.
Основная задача этих программ - генерировать веб-страничку "на лету".
Программы, работающие с веб-сервером и генерирующие страницы на основе данных, хранящихся в базе, называются веб-приложениями. Как правило сложные веб-ресурсы включают в себя несколько серверных приложений. Основное отличие от простейших моделей от состовляющих веб-приложений, привязаных не к конкретному серверу, а к определенному ip-адресу. Это позволяет сделать сложную архитектуру сайта.
В андроидных коллайдерах сталкиваются андроиды, для получения более маленьких андроидов. Для обработки информации для этих исследований необходим высокопроизводительный веб-сервер на пхп.
Преимущество этого подхода:
1. Возможность данные отдельно от их обработки и ввода-вывода.
2. Возможность предварительной обработки перед выводом (фильтрация, сортировка и блокировка).
3. Возможность получить данные клиента и сохранить их в хранилище данных.
4. Повысить безопасность путем разграничения доступа к обработке и хранению данных.
Недостатки:
1. Необходимость специального языка программирования.
2. Необходимость настраивать ядро платформы.
Самая распространеная платформа - Pretty Home Page.

Основные принципы разработки серверных приложений
Модули веб-приложений делятся на:
1. Модели. Программный модуль, входящий в состав приложения, который служит посредником между модулями и базой данных. Суть представления базы данных (полей, таблиц, связей), терминология языка программирования, на котором пишется приложение. Каждая модель соответствует одной баззе данных. Задачи модели:
  1. Описывать таблицы баз данных и их структуру в терминах языка программирования.
  2. Реализовать механизм фильтрации и сортировки.
  3. Реализовать механизм добавления и обновления информации.
  4. Отслеживать корректность обработки данных.
2. Контроллеры. Модуль, который выполняет непосредственную обработку данных.
3. Шаблоны. Модуль приложения для ввода-вывода подготовленных контроллеров данных.
4. Служебные.
Такая система называется Модель-Контроллер-Шаблон (MVC).
Новые подходы связаны с асинхронностью доступа.
